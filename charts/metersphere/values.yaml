ingress:
  enabled: true
  host: ms-dev.apps.metersphere.com
  annotations:
    {}
    ## example for ingress annotions.
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  https:
    enabled: false
    secretName: ""

common:
  imagePrefix: "registry.fit2cloud.com/metersphere/"
  image: "metersphere-ce"
  imagePullSecrets: nil
  storageClass: default
  imageTag: v3.6.0-lts
  imagePullPolicy: Always
  properties: |-
    ## DATABASE
    spring.datasource.url=jdbc:mysql://{{.Values.mysql.host}}:{{.Values.mysql.port}}/metersphere?autoReconnect=false&useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
    spring.datasource.username={{.Values.mysql.username}}
    spring.datasource.password={{.Values.mysql.password}}

    ## redis
    spring.session.store-type=redis
    spring.redis.redisson.file=file:/opt/metersphere/conf/redisson.yml

    ## KAFKA
    kafka.partitions=1
    kafka.replicas=1
    kafka.bootstrap-servers={{.Values.kafka.host}}.{{.Release.Namespace}}:{{.Values.kafka.port}}

    ## minio
    minio.endpoint=http://{{.Values.minio.host}}:{{.Values.minio.port}}
    minio.access-key={{.Values.minio.username}}
    minio.secret-key={{.Values.minio.password}}

    logger.sql.level=info

redisson:
  yml: |-
    singleServerConfig:
      password: {{.Values.redis.password}}
      address: "redis://{{.Values.redis.host}}:{{.Values.redis.port}}"
      database: {{.Values.redis.database}}

metersphere:
  enabled: true
  replicas: 1

resultHub:
  enabled: true
  replicas: 1

taskRunner:
  enabled: true
  replicas: 1

logPersistence:
  enabled: true
  accessModes: ReadWriteMany
  size: 10Gi

dataPersistence:
  enabled: true
  accessModes: ReadWriteMany
  size: 10Gi

mysql:
  enabled: true
  image: mysql
  imageTag: "8.0.38"
  host: metersphere-mysql
  port: 3306
  username: root
  password: Password123@mysql
  persistence:
    enabled: true
    accessModes: ReadWriteOnce
    size: 20Gi
minio:
  enabled: true
  image: minio
  imageTag: "RELEASE.2024-05-07T06-41-25Z"
  username: admin
  password: Password123@minio
  host: metersphere-minio
  port: 9000
  persistence:
    enabled: true
    accessModes: ReadWriteOnce
    size: 20Gi
redis:
  enabled: true
  image: redis
  imageTag: "7.2.5-alpine"
  password: Password123@redis
  host: metersphere-redis
  port: 6379
  database: 1
  persistence:
    enabled: true
    accessModes: ReadWriteOnce
    size: 10Gi
kafka:
  enabled: true
  fullnameOverride: kafka
  host: kafka
  port: 9092
  metricTopic: JMETER_METRICS
  logTopic: JMETER_LOGS
  testTopic: LOAD_TESTS
  reportTopic: JMETER_REPORTS
  listeners:
    client:
      protocol: 'PLAINTEXT'
    controller:
      protocol: 'PLAINTEXT'
    interbroker:
      protocol: 'PLAINTEXT'
    external:
      protocol: 'PLAINTEXT'
  controller:
    replicaCount: 1
    extraConfig: |
      default.replication.factor=1
      offsets.topic.replication.factor=1
      transaction.state.log.replication.factor=1
    persistence:
      enabled: false
  persistence:
    enabled: false
  logPersistence:
    enabled: false
  logFlushIntervalMessages: _10000
  logFlushIntervalMs: 1000
  logRetentionBytes: _1073741824
  logRetentionCheckIntervalMs: 300000
  logRetentionHours: 168
  logSegmentBytes: _1073741824
  maxMessageBytes: _1000012
  livenessProbe:
    initialDelaySeconds: 20
    periodSeconds: 15
    timeoutSeconds: 15
  readinessProbe:
    initialDelaySeconds: 20
    periodSeconds: 15
    timeoutSeconds: 15
  externalAccess:
    enabled: true
    controller:
      service:
        type: NodePort
        useHostIPs: true
    borker:
      service:
        type: NodePort
        useHostIPs: true
    autoDiscovery:
      enabled: true
  serviceAccount:
    create: true
  rbac:
    create: true
  extraEnvVars:
    - name: FORMAT_MESSAGES_PATTERN_DISABLE_LOOKUPS
      value: "true"
  kraft:
    enabled: true
  zookeeper:
    enabled: false
